1.Create a folder MODELS
2.open cmd in MODELS folder 
  in cmd 
  -> E:
  -> cd E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS
  ->git clone https://github.com/tensorflow/models.git
3.open Anaconda prompt 
  create a virtual environment 
  conda create -n object_detection python=3.7
  conda activate object
4.Install packages 
  ->conda install pip 
  ->pip install TensorFlow==1.15 lxml pillow matplotlib jupyter contextlib2 cython tf_slim
  we are using tensorflow 1.15 as tensor flow 2 doesnot support objectdetection 
  
5. Download protocol buffers 
   Go to https://github.com/protocolbuffers/protobuf/releases/tag/v3.4.0
   Download  protoc-3.4.0-win32
   copy C:\Users\Admin\Downloads\protoc-3.4.0-win32\bin protoc.exe 
   to E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research

6. Back to anaconda prompt 
   change directory 
   cd /d E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research
   run below command 
   ->protoc object_detection/protos/*.proto --python_out=.
   This will compile proto buff 
   then 
   ->python setup.py build 
   ->python setup.py install
   (in windows)
   install visual studio C++ build tools 
   using https://github.com/philferriere/cocoapi#egg=pycocotools
   ->pip install pycocotools
   ->conda install jupyter
   ->jupyter notebook
7. In jupyter notebook
   go to E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research\object_detection\colab_tutorials
   select object_detection>colab_tutorials >object_detection_tutorial.ipynb 
   observation :In locaal it is not working 
                after opening in jupyter notebook option isthere to run in colab 
				in colab it is working fine
   run all
   
   NOTE : if getting issue %%bash not found 
   in system variable , system variable , path  add C:\Program Files\Git\bin
   or replace %%bash with %% cmd 
8. Install cv2 
   Go to https://www.lfd.uci.edu/~gohlke/pythonlibs/#opencv
   select opencv_python‑4.4.0‑cp37‑cp37m‑win_amd64.whl as python 3.7 and windows as 64 bit 
   anaconda prompt 
   cd /d E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION
   pip install opencv_python-4.4.0-cp37-cp37m-win_amd64.whl
   cd /d E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research
   
   

9. run in local 
    copy updated_old_example.py  from updated_old_example to E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research\object_detection
	create a new folder outputs in E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research\object_detection
   anaconda prompt pointing to resarch folder 
   ->pip install spyder 
   ->spyder3
   open updated_old_example.py  in E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research\object_detection
   
   run in web cam 
   copy webcam_detection.py  from https://github.com/Bengemon825/TF_Object_Detection2020/tree/master/scripts to E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research\object_detection
   ->spyder3
   open webcam_detection.py in E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research\object_detection
   
   
 
 ***********************
 CUSTOM OBJECT DETECTION
 ***********************
 1. LABEL IMG
 cmd
 cd E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\labelimage
 git clone https://github.com/tzutalin/labelImg.git
 
 2.In anaconda prompt 
   conda activate object_detection
   cd /d E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\labelimage\labelImg
	conda install pyqt=5
	conda install -c anaconda lxml
	pyrcc5 -o libs/resources.py resources.qrc
	python labelImg.py
	
3.This will open label img app
  before that download all the images using imagedownlaoder extension 
  rename the images using rename_images.py
4. Open label image app using python labelImg.py
   choose open dir and save dir 
   create rectangle save this will create an xml file for each image 
   suppose we have 300 images 
   we will get 300 images + 300 xml file
5. create folder structure 
   masks ->data 
         ->images -> train 
		          ->test 
		 ->training
6.put 30 image + xml in test 
  put 270 image + xml in training 
7.convert xml to csv 
  in cmd
  cd E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\masks
  python xml_to_csv.py
   
  in data folder we willgetcsv files  which will contains location of rectangle 
8.generate TF record 
  open generate_tfrecord.py 
  edit 
  def class_text_to_int(row_label):
    if row_label == 'cloth_mask':
        return 1
    else:
        None
   if more classes are present then more if blocks can be added 
   in anaconda prompt 
   pip install pandas 
   cd /d E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\masks
   
   run below 2 commands
   python generate_tfrecord.py --csv_input=data/test_labels.csv --output_path=data/test.record --image_dir=images
   python generate_tfrecord.py --csv_input=data/train_labels.csv --output_path=data/train.record --image_dir=images
   NOTE : all images should  be there in  images folder along with train and test 
   
   
 *********************************
 TRAINING IN GOOGLE COLAB AND CPU 
 **********************************
 Go to https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf1_detection_zoo.md  to see 
 different models available for object detection 
 1.Download ssd_mobilenet_v1_coco and put in masks folder and unzip it one more time unzip put the content in masks folder 
 2.Download sample/config from https://github.com/tensorflow/models/tree/master/research/object_detection/samples/configs  
          choose ssd_mobilenet_v1_pets.config copy and paste in a file with same name and extension 

 3.object-detection.pbtxt
  create a file called object-detection.pbtxt
  put
  For more item we can add more 
  item {
	id: 1
	name: 'cloth_mask'
   }
   put object-detection.pbtxt in masks/data  folder 
  4.Edit ssd_mobilenet_v1_pets.config 
  set 
  num_classes: 1
  fine_tune_checkpoint: "ssd_mobilenet_v1_coco_2018_01_28/model.ckpt"
  NOTE:ssd_mobilenet_v1_coco_2018_01_28 weobtained from STEP 1 download 
  batch_size: 24  keep smaller batch size if getting memory error 
  input_path: "data/train.record"
  input_path: "data/test.record"
  label_map_path: "training/object-detection.pbtxt"
  After edir done put  ssd_mobilenet_v1_pets.config in masks/training folder 
  
  5.Copy below folder from masks to models/resarch/object-detection
    data 
	images 
	ssd_mobilenet_v1_coco_2018_01_28
	training 
  6. copy content of folder models/resarch/object-detection/legacy to models/resarch/object_detection
  7. TRAINING  IN LOCAL PC 
     copy below two files from E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research\slim to 
	                           E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research\object_detection
	 a. nets 
	 b. deployment
     go to anaconda prompt 
	 >conda activate object-detection
	 >pip install scipy 
	 >cd /d E:\GIT_HUB_ALL_REPOSITORY\OBJECT_DETECTION\MODELS\models\research\object_detection
	 >SET PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim
	 >python train.py --train_dir=training/ --pipeline_config_path=training/ssd_mobilenet_v1_pets.config --logtostderr
	 
	 in training we will keep getting new files 
	
   8 . TRAINING IN COLAB 
   
  
  
  
   
   
   
   
   
  
   
   
   
   
